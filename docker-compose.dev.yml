# Docker Compose for Development Environment
# Only runs infrastructure (PostgreSQL, Redis, Kong)
# Services (auth, post) run locally on host machine

services:
  # Kong API Gateway
  kong:
    image: kong:latest
    container_name: bw-kong-dev
    restart: unless-stopped
    ports:
      - "8000:8000"    # HTTP API
      - "8443:8443"    # HTTPS API
      - "8001:8001"    # Admin API
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000
    volumes:
      - ./kong/config.dev.yml:/var/lib/kong/kong.yml:ro
    networks:
      - bw-network
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bw-postgres-dev
    restart: unless-stopped
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: master123
      POSTGRES_DB: postgres
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - bw-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bw-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_dev_data:/data
    networks:
      - bw-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  bw-network:
    driver: bridge

volumes:
  postgres_dev_data:
  redis_dev_data:

